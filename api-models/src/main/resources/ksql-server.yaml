openapi: '3.0.2'
info:
  title: KSQL Server API
  version: 5.1.0

servers:
  - url: http://flightstream.reactive-labs.io:8088

tags:
  - name: ksql

paths:
  /ksql:
    post:
      tags:
        - ksql
      x-scala-package: ksql
      summary: Runs a list of KSQL statements
      externalDocs:
        url: https://docs.confluent.io/current/ksql/docs/developer-guide/api.html#run-a-ksql-statement
      operationId: runKsqlStatements
      requestBody:
        required: true
        content:
          'vnd.ksql.v1+json':
            schema:
              $ref: '#/components/schemas/RunStatements'
      responses:
        '200':
          description: Statements result
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatementRun'
        '400':
          description: Bad request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RunStatementsError'
        '500':
          description: Error executing statements
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RunStatementsError'

components:
  schemas:
    RunStatements:
      type: object
      required:
        - ksql
      properties:
        ksql:
          type: string

    RunStatementsError:
      type: object
      required:
        - error_code
        - message
      properties:
        error_code:
          type: integer
          enum:
            - 40001
            - 40002
          default: 40001
        message:
          type: string

    StatementRun:
      type: object
      required:
        - '@type'
      properties:
        '@type':
          type: string
      discriminator:
        propertyName: '@type'
        mapping:
          currentStatus: '#/components/schemas/currentStatus'
          queries: '#/components/schemas/queries'
          sourceDescription: '#/components/schemas/sourceDescription'

    currentStatus:
      allOf:
        - $ref: '#/components/schemas/StatementRun'
        - type: object
          required:
            - commandId
            - commandStatus
          properties:
            commandId:
              type: string
            commandStatus:
              $ref: '#/components/schemas/CommandStatus'
    CommandStatus:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          enum:
            - SUCCESS
            - ERROR
            - TERMINATED
            - EXECUTING
            - PARSING
            - QUEUED
          default: SUCCESS
        message:
          type: string

    queries:
      allOf:
        - $ref: '#/components/schemas/StatementRun'
        - type: object
          required:
            - queries
          properties:
            queries:
              type: array
              items:
                $ref: '#/components/schemas/Query'
    Query:
      type: object
      required:
        - id
        - sinks
      properties:
        id:
          type: string
        sinks:
          type: array
          items:
            type: string

    sourceDescription:
      allOf:
        - $ref: '#/components/schemas/StatementRun'
        - type: object
          required:
            - sourceDescription
          properties:
            sourceDescription:
              $ref: '#/components/schemas/Description'
    Description:
      type: object
      required:
        - readQueries
      properties:
        readQueries:
          type: array
          items:
            $ref: '#/components/schemas/ReadQuery'
    ReadQuery:
      type: object
      required:
        - id
      properties:
        id:
          type: string
